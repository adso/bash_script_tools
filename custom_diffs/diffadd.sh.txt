#! /bin/bash
# the aim of this script is to generate only additive patches 
#
#
#para cada hunk 
  #sed busca el principio cada hunk , su número de linea, y los valores de los límites del hunk
  #se extrae esa porción del fichero en memoria y se cuentan las potenciales substituciones
  #se actualizan los valores del hunk
#
#finalmente se realizan las sustituciones de todo el fichero. 

set -o posix
posix=" --posix"
delim=":"

declare -a amatrix arow alines

pattern_hunk="^@@ -\([0-9]\+\),\([0-9]\+\) +\([0-9]\+\),\([0-9]\+\) @@$"
hlimits=$(sed $posix -n "/$pattern_hunk/ { s,,\1 \2 \3 \4 $delim, ; = ; p ; }  " tmpdiff.patch )
hlimits=${hlimits//$'\n'/' '}
i=0
while [ ${#hlimits} -gt 0 ]; do
    row=$(expr match "$hlimits" '\([0-9 ]*\)' )
    hlimits=${hlimits#$row}
    hlimits=${hlimits#$delim}
    arow=( $row )
    amatrix[$i]=${arow[@]}
    hlines[$i]=${arow[0]}
    i=$(( $i+1 ))
done

i=0
step=0
for (( i=0 ; i<${#hlines} ; i++ )); do 
    j=$(( $i +1 ))
    e=$(( ${hlines[$j]} - 1 ))
    c=$(( ${hlines[$j]} - ${hlines[$i]} ))
    step=$(( $step + $(cat  tmpdiff.patch  | head -n $e  | tail -n $c | grep -c "^[- ]\{1,1\}" )  ))      # los cuento
    sed "s,^[- ]\{1\,1\}\(.*\),  \1,1"  tmpdiff.patch > result.path$i                                     # los elimino
    aoutput=( ${amatrix[$i]} ) 
    x=${aoutput[1]} 
    y=$(( ${aoutput[2]} + $step ) 
    z=$(( ${aoutput[3]} )) 
    t=$(( ${aoutput[4]} + $step ))
    sed "${hlines[$1]} { s/.*/@@ -$x,$y +$z,$t @@/1 ; }" tmpdiff.patch > result.path
done    

 
